/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/outputs.h>

#define BASE 0
#define LOWER 1
#define NUMPAD  2
#define RAISE 3
#define ADJUST 4

/ {
    // Activate ADJUST layer by pressing raise and lower

   	behaviors {
        klt: key_layer_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "ALPHA_LAYER_TAP";
			#binding-cells = <2>;
            tapping-term-ms = <225>;
            require-prior-idle-ms = <125>;
            quick_tap_ms = <0>;
            flavor = "tap-preferred";
            bindings = <&mo>, <&kp>;
        };
		hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
			#binding-cells = <2>;
            tapping-term-ms = <225>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };	
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        adjust_layer {
            if-layers = <LOWER RAISE>;
            then-layer = <ADJUST>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            label = "default";

            // ------------------------------------------------------------------------------------------------------------
            // |   `   |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |       |
            // |  ESC  |  Q  |  W  |  E   |  R   |  T   |                   |  Y   |  U    |  I    |  O   |   P   | BKSPC |
            // |  TAB  |  A  |  S  |  D   |  F   |  G   |                   |  H   |  J    |  K    |  L   |   ;   |   '   |
            // | SHIFT |  Z  |  X  |  C   |  V   |  B   |  MUTE  |  |       |  N   |  M    |  ,    |  .   |   /   | SHIFT |
            //               | GUI | ALT  | CTRL | LOWER|  ENTER |  | SPACE | RAISE| CTRL  | ALT   | GUI  |

            bindings = <
&kp ESC     &kp N1    &kp N2    &kp N3     &kp N4     &kp N5             &kp N6         &kp N7     &kp N8        &kp N9    &kp N0    &kp BSPC
&kp TAB     &kp Q     &kp W     &kp E      &kp R      &klt NUMPAD T      &kp Y          &kp U      &kp I         &kp O     &kp P     &kp DEL
&mo ADJUST  &kp A     &kp S     &kp D      &kp F      &klt LOWER G       &kp H          &kp J      &kp K         &kp L     &kp SEMI  &kp SQT
&kp LSHFT   &kp Z     &kp X     &kp C      &kp V      &klt RAISE B       &kp N          &kp M      &kp COMMA     &kp DOT   &kp FSLH  &kp RSHFT
&kp C_MUTE  &kp LGUI  &kp LALT  &kp LALT   &kp LCTRL  &kp SPACE          &lt LOWER RET  &mo RAISE  &kp RCTRL     &kp RALT  &kp RGUI
                                                                         &kp ENTER  &kp RIGHT  &kp UP_ARROW  &kp LEFT  &kp DOWN
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };

        lower_layer {
            label = "lower";

            // TODO: Some binds are waiting for shifted keycode support.
            // ------------------------------------------------------------------------------------------------------------
            // |       |  F1 |  F2 |  F3  |  F4  |  F5  |                   |  F6  |  F7   |  F8   |  F9  |  F10  |  F11  |
            // |   `   |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |  F12  |
            // |       |  !  |  @  |  #   |  $   |  %   |                   |  ^   |  &    |  *    |  (   |   )   |   |   |
            // |       |  =  |  -  |  +   |  {   |  }   |        |  |       |  [   |  ]    |  ;    |  :   |   \   |       |
            //               |     |      |      |      |        |  |       |      |       |       |      |

            bindings = <
&kp GRAVE  &kp F1     &kp F2     &kp F3    &kp F4      &kp F5        &kp F6     &kp F7    &kp F8     &kp F9     &kp F10    &kp F11
&kp GRAVE  &kp EXCL   &kp AT     &kp HASH  &kp DOLLAR  &kp PRCNT     &kp CARET  &kp AMPS  &kp STAR   &kp LPAR   &kp RPAR   &trans
&trans     &kp MINUS  &kp UNDER  &kp PIPE  &kp LBRC    &kp RBRC      &kp MINUS  &kp UNDER &kp PIPE   &kp LPAR   &kp RPAR   &kp DQT
&trans     &kp LPAR   &kp RPAR   &none     &kp LBKT    &kp RBKT      &kp PLUS   &kp EQUAL &kp LT     &kp GT     &kp BSLH   &kp EQUAL
&trans     &trans     &trans     &trans    &trans    &trans        &trans     &trans    &trans     &trans     &trans
                                                                   &kp A      &kp B     &kp C      &kp D      &kp E
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };

        numpad_layer {
            label = "numpad";

            // TODO: Some binds are waiting for shifted keycode support.
            // ------------------------------------------------------------------------------------------------------------
            // |       |  F1 |  F2 |  F3  |  F4  |  F5  |                   |  F6  |  F7   |  F8   |  F9  |  F10  |  F11  |
            // |   `   |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |  F12  |
            // |       |  !  |  @  |  #   |  $   |  %   |                   |  ^   |  &    |  *    |  (   |   )   |   |   |
            // |       |  =  |  -  |  +   |  {   |  }   |        |  |       |  [   |  ]    |  ;    |  :   |   \   |       |
            //               |     |      |      |      |        |  |       |      |       |       |      |

            bindings = <
&trans     &kp F1     &kp F2     &kp F3    &kp F4    &kp F5          &none    &none   &none   &kp TAB         &none           &trans
&kp GRAVE  &kp N1     &kp N2     &kp N3    &kp N4    &kp N5          &kp N7   &kp N8  &kp N9  &kp KP_ASTERISK &kp KP_SLASH    &trans
&trans     &kp EXCL   &kp AT     &kp HASH  &kp DLLR  &kp PRCNT       &kp N4   &kp N5  &kp N6  &kp KP_PLUS     &kp KP_MINUS    &trans
&trans     &kp EQUAL  &kp MINUS  &kp PLUS  &kp LBRC  &kp RBRC        &kp N1   &kp N2  &kp N3  &kp DOT         &kp BSLH        &kp BSLH
&trans     &trans     &trans     &trans    &trans    &trans        &kp RET    &kp N0  &trans  &trans          &trans
                                                                     &kp A      &kp B     &kp C      &kp D      &kp E
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };

        raise_layer {
            label = "raise";

            // ------------------------------------------------------------------------------------------------------------
            // | BTCLR | BT1  | BT2  |  BT3  |  BT4  |  BT5 |                |      |      |       |      |       |       |
            // |       | INS  | PSCR | GUI   |       |      |                | PGUP |      |   ^   |      |       |       |
            // |       | ALT  | CTRL | SHIFT |       | CAPS |                | PGDN |   <- |   v   |  ->  |  DEL  | BKSPC |
            // |       | UNDO | CUT  | COPY  | PASTE |      |      |  |      |      |      |       |      |       |       |
            //                |      |       |       |      |      |  |      |      |      |       |      |

            bindings = <
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &trans     &trans    &trans    &trans     &trans   &trans
&trans      &kp INS       &kp PSCRN     &kp K_CMENU   &trans        &trans        &kp PG_UP  &trans    &kp UP    &trans     &kp N0   &trans
&trans      &kp LALT      &kp LCTRL     &kp LSHFT     &trans        &kp CLCK      &kp PG_DN  &kp LEFT  &kp DOWN  &kp RIGHT  &kp DEL  &kp BSPC
&trans      &kp K_UNDO    &kp K_CUT     &kp K_COPY    &kp K_PASTE   &trans        &trans     &trans    &trans    &trans     &trans   &trans
&trans      &trans        &trans        &trans        &trans        &trans        &trans     &trans    &trans    &trans     &trans
                                                                                  &kp A      &kp B     &kp C     &kp D      &kp E
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };

        adjust_layer {
            // ----------------------------------------------------------------------------------------------------------------------------
            // | BTCLR  |  BT1    |  BT2    |   BT3   |   BT4   |   BT5   |                  |      |      |       |      |       |       |
            // | EXTPWR | RGB_HUD | RGB_HUI | RGB_SAD | RGB_SAI | RGB_EFF |                  |      |      |       |      |       |       |
            // |        | RGB_BRD | RGB_BRI |         |         |         |                  |      |      |       |      |       |       |
            // |        |         |         |         |         |         | RGB_TOG | |      |      |      |       |      |       |       |
            //                    |         |         |         |         |         | |      |      |      |       |      |

            label = "adjust";
            bindings = <
&kp LC(LS(ESC))    &none         &none            &none            &kp LA(F4)        &none              &none  &none  &none  &none  &none  &none
&ext_power EP_TOG  &bt BT_SEL 0  &bt BT_SEL 0     &rgb_ug RGB_SAD  &rgb_ug RGB_SAI  &rgb_ug RGB_EFF     &none  &none  &none  &none  &none  &kp LC(LA(DEL))
&none              &bt BT_SEL 1  &bt BT_SEL 0     &none            &none            &none               &none  &none  &none  &none  &none  &none
&none              &bt BT_SEL 2  &out OUT_TOG     &none            &none            &none               &none  &none  &none  &none  &none  &bt BT_CLR
&none              &none            &none         &none            &none            &none            &none  &none  &none  &none  &none
                                                                                                        &kp A  &kp B  &kp C  &kp D  &kp E
            >;
        };
    };
};
